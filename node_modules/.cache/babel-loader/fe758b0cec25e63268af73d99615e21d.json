{"ast":null,"code":"var _jsxFileName = \"/home/pruce/Documents/redbus/src/Components/Fetchme.js\";\nimport React, { Component } from 'react';\nimport './Mycss.css';\nexport default class Fetchme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickHandler = event => console.log(event.target.id);\n\n    this.srconchange = e => {\n      this.setState({\n        busarea: e.target.value\n      });\n      fetch(`https://www.redbus.in/Home/SolarSearch?search=${this.state.busarea}`).then(response => response.json()).then(parsedJSON => {\n        let buses = parsedJSON.response.docs.map((redbus, index) => {\n          return React.createElement(\"div\", {\n            id: redbus.ID,\n            key: redbus.ID,\n            onClick: this.clickHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, redbus.Name);\n        });\n        this.setState({\n          statebus: [buses]\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      statebus: [],\n      busarea: ''\n    };\n  } // componentDidMount() {\n  //     fetch(`https://www.redbus.in/Home/SolarSearch?search=${this.state.busarea}`)\n  //       .then(response => response.json())\n  //       .then(parsedJSON => {\n  //         let buses = parsedJSON.response.docs.map((redbus)=>{\n  //           return(\n  //           <div>{redbus.Name}</div>\n  //           )\n  //         })\n  //           this.setState({statebus:[buses]})\n  //       })\n  //   }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"changer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"busarea\",\n      onChange: this.srconchange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"// \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"busarea\",\n      onChange: this.srconchange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), this.state.statebus);\n  }\n\n}","map":{"version":3,"sources":["/home/pruce/Documents/redbus/src/Components/Fetchme.js"],"names":["React","Component","Fetchme","constructor","props","clickHandler","event","console","log","target","id","srconchange","e","setState","busarea","value","fetch","state","then","response","json","parsedJSON","buses","docs","map","redbus","index","ID","Name","statebus","data","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,YAtBmB,GAsBJC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,EAAzB,CAtBL;;AAAA,SAwBjBC,WAxBiB,GAwBFC,CAAD,IAAM;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAACF,CAAC,CAACH,MAAF,CAASM;AAAlB,OAAd;AACAC,MAAAA,KAAK,CAAE,iDAAgD,KAAKC,KAAL,CAAWH,OAAQ,EAArE,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,UAAU,IAAI;AAClB,YAAIC,KAAK,GAAGD,UAAU,CAACF,QAAX,CAAoBI,IAApB,CAAyBC,GAAzB,CAA6B,CAACC,MAAD,EAAQC,KAAR,KAAgB;AACvD,iBACI;AAAK,YAAA,EAAE,EAAED,MAAM,CAACE,EAAhB;AAAoB,YAAA,GAAG,EAAEF,MAAM,CAACE,EAAhC;AAAoC,YAAA,OAAO,EAAE,KAAKtB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiEoB,MAAM,CAACG,IAAxE,CADJ;AAED,SAHW,CAAZ;AAIE,aAAKf,QAAL,CAAc;AAACgB,UAAAA,QAAQ,EAAC,CAACP,KAAD;AAAV,SAAd;AACH,OARD;AAUH,KApCgB;;AAEf,SAAKL,KAAL,GAAa;AACXa,MAAAA,IAAI,EAAE,IADK;AAEXD,MAAAA,QAAQ,EAAE,EAFC;AAGXf,MAAAA,OAAO,EAAC;AAHG,KAAb;AAKH,GAR0C,CAS3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAkBAiB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAE,SAAzB;AAAmC,MAAA,QAAQ,EAAE,KAAKpB,WAAL,CAAiBqB,IAAjB,CAAsB,IAAtB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAE,SAAzB;AAAmC,MAAA,QAAQ,EAAE,KAAKrB,WAAL,CAAiBqB,IAAjB,CAAsB,IAAtB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGH,KAAKf,KAAL,CAAWY,QAHR,CADJ;AAUH;;AAnD0C","sourcesContent":["import React, { Component } from 'react'\nimport './Mycss.css';\n\nexport default class Fetchme extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: null,\n          statebus: [],\n          busarea:''\n        };\n    }\n    // componentDidMount() {\n    //     fetch(`https://www.redbus.in/Home/SolarSearch?search=${this.state.busarea}`)\n    //       .then(response => response.json())\n    //       .then(parsedJSON => {\n    //         let buses = parsedJSON.response.docs.map((redbus)=>{\n    //           return(\n    //           <div>{redbus.Name}</div>\n    //           )\n    //         })\n    //           this.setState({statebus:[buses]})\n    //       })\n\n    //   }\n\n    clickHandler = event => console.log(event.target.id)\n      \n      srconchange = (e) =>{\n          this.setState({busarea:e.target.value})\n          fetch(`https://www.redbus.in/Home/SolarSearch?search=${this.state.busarea}`)\n          .then(response => response.json())\n          .then(parsedJSON => {\n            let buses = parsedJSON.response.docs.map((redbus,index)=>{\n              return(\n                  <div id={redbus.ID} key={redbus.ID} onClick={this.clickHandler}>{redbus.Name}</div>              )\n            })\n              this.setState({statebus:[buses]})\n          })\n\n      }\n\n    render() {\n       \n        return (\n            <div className = 'changer'>\n              <input type=\"text\" name =\"busarea\" onChange={this.srconchange.bind(this)}></input>\n             // <input type=\"text\" name =\"busarea\" onChange={this.srconchange.bind(this)}></input>\n        {this.state.statebus}\n        \n          \n        \n      </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}